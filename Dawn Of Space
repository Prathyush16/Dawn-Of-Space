import pgzrun
from random import randint

WIDTH=1000
HEIGHT=750
player=Actor('playership')
player.x=WIDTH/2
player.y=HEIGHT-50
bullets=[]
enemies=[]
score=0
WHITE=(255,255,255)
game_over=False
def draw():
    screen.blit('intersteller g (1)',(0,0))
    player.draw()
    for bullet in bullets:
        bullet.draw()
    for enemy in enemies:
        enemy.draw()
    screen.draw.text("Score:"+str(score),(10,10),fontsize=25,color=WHITE)
def update():
    if not game_over:
        move_player()
        move_bullet()
        move_enemy()
        check_bullet_collision()
        check_player_collision()
def on_key_down(key):
    if not game_over:
        if key == keys.SPACE:
            create_new_bullet()

def move_player():
    if keyboard.left:
        player.x-=10
    if keyboard.right:
        player.x+=10
def create_new_bullet():
    bullet=Actor('bullet')
    bullet.pos=player.pos
    bullets.append(bullet)
def create_new_enemy():
    enemy=Actor('ufoblue')
    enemy.x=randint(100,WIDTH-100)
    enemy.y=10
    enemies.append(enemy)
def move_bullet():
    for bullet in bullets:
        if bullet.bottom<0:
            bullets.remove(bullet)
        else:
            bullet.y-=20
def move_enemy():
    for enemy in enemies:
        if enemy.top>HEIGHT:
            enemies.remove(enemy)
            create_new_enemy()
        else:
            enemy.y+=1
def check_bullet_collision():
    global score
    for bullet in bullets:
        for enemy in enemies:
            if bullet.colliderect(enemy):
                bullets.remove(bullet)
                score+=10
                enemies.remove(enemy)
                create_new_enemy()
def check_player_collision():
    global game_over
    for enemy in enemies:
        if enemy.colliderect(player):
            enemies.remove(enemy)
            player.image='damageship'
            game_over=True

create_new_enemy()
pgzrun.go()
